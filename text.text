1.
git init 
ساخت مخزن گیت برای اجرا دستورات و محل ذخیره سازی اطلاعات گیت در لوکال یا سیستم محلی خود
____________________________________________
2.
git status
تغییرات که رو فایل های پروژه انجام دادیم را نشان می دهد
____________________________________________
3.
git add index.js or git add .
فایل های که در 
تغییر کرده باید وارد استیچ کرد تا بعد ان بتوان انها را در مخزن گیت دسته بندی کرد
index.js هر فایل می توان وارد استیچ کرد
یا اگر چند فایل داشته باشیم برای راحتی میتوان همه انها
با کد زیر به استیچ فرستاد
git add .
____________________________________________
4.
git commit -m "کامیت"
می توان یک کامیت گذاشت برای تغییراتی که انجام دادیم
و ذخیره در مخزن ودسترسی  اسان 
-m به منظور گذاشتن کامیت
____________________________________________
5.
git commit -a -m "کامیت"
دو دستور 
add . and commit -m "comment"
همزمان اجرا کرد
نکته : اگه فایلی اولین بار باشه نغییرات روش انجام میشه برای بردن به 
stage
فقط با
git add .
می توان انجام داد.
____________________________________________
6.
git rm --cached <name file>
اگر بخواهیم از 
add 
در بیاریم به طور کلی از 
stage
در میاره
____________________________________________
7.
git rm --cached -r .
کل فایل را در میاره از
stage
____________________________________________
8. 
git diff
تغییرات را نشان میده قبل از 
stage
کردن
____________________________________________
9.
git log
اطلاعات کامیت ها رو نشان میده
____________________________________________
10.
git log --oneline
اطلاعات کامیت ها رو مرتب تر نمایش میده
____________________________________________
11.
git log -2 --oneline
دو کامیت آخر نمایش می دهد
____________________________________________
12.
git log -p
کامیت ها با تغییرات نمایش می دهد
____________________________________________
13.
git log --stat
اطلاعات کامیت ها رو مرتب تر میاره
____________________________________________
14.
git checkout -- .
تغییرات کد می خواهیم پاک کنیم و برمی گردد به آخرین کامیت
____________________________________________
15.
git reset HEAD .
تغییرات از 
stage
خارج کنیم
____________________________________________
16.
git reset <commit id>
میبره به کامیت مورد نظر و تغییرات جدید هم میاره
____________________________________________
17.
git reset --hard <commit id>
ما رو می بره به این کامیت و تغییرات را نمی آورد
____________________________________________
18.
git branch <name branch>
ساخت یک مخزن جدید
____________________________________________
19.
git branch -a
لیست مخزن ها رو میاره
____________________________________________
20.
git checkout <name branch>
میتوان بین 
branch
جابجا شد
____________________________________________
21.
git branch -D <name branch>
پاک کردن
branch
مورد نظر
____________________________________________
22.
git checkout -b <name branch>
هم 
branch
می سازه هم به 
branch
ساخته شده جابجا میشه
____________________________________________
23.
git merge <name branch>
اطلاعات برنج مورد نظر به برنج که هستیم انتقال می دهد
____________________________________________
24.
git log --graph
میاد 
log
کامیت به حالت گرافی نمایش می دهد
____________________________________________
<<<< HEAD
این قسمت کد برنج که هستیم
=======
این قسمت کد های که مرج شدن
>>>> <name branch>
____________________________________________
25.
git statsh --help
میاد یک کامیت پیش فرض می دهد تا کارهای مورد 
نیاز جابجا نشود و هر موقع لازم باش کامیت کنیم
____________________________________________
26.
git statsh list
لیست 
statsh
را نمایش می دهد
____________________________________________
27.
git statsh drop <name statsh>
پاک می کرد
____________________________________________
38.
git statsh save <commit>
با یک کامیت آن را ذخیره می کنیم
____________________________________________
39.
git statsh show <name statsh>
تغییرات را نمایش میدهد
____________________________________________
40.
git statsh show -p <name statsh>
تغییرات را با جزییات نمایش میدهد
____________________________________________
41.
git statsh apply <name statsh>
تغییرات را اعمال می کنه ولی 
statsh
پاک نمی کنه
____________________________________________
42.
git statsh pop <name statsh>
تغییرات را اعمال می کنه ولی 
statsh
پاک می کنه
____________________________________________
touch .gitignore
ساخت فایل
x/ پوشه
*.text همه فایل های
!a.txt 
____________________________________________
git config --global ueer.name ""
git config --global user.email ""
git config --global core.editor ""
____________________________________________
43.
git config --list
لیست تنظیمات را نمایش میده
با 
-a 
فایل های مخفی را هم نمایش میدهد
____________________________________________
44.
git rm cached -r .
هر چی داخل کش بود را پاک کن
____________________________________________
45.
git config --list
لیست تنظیمات را نمایش میدهد
____________________________________________
46.
git revert <id commit>
برای پاک کردن
____________________________________________
47.
git reset --soft <id commit>
میبره به کامیت مورد نظر بصورت امن
____________________________________________
48.
git diff --stage
نغییرات 
stage
نمایش می دهد
____________________________________________
git push --set-upstream origin <name branch>
git push -u origin <name branch>
____________________________________________
